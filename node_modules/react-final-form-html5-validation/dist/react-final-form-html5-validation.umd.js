(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('react-dom'), require('react-final-form')) :
  typeof define === 'function' && define.amd ? define(['exports', 'react', 'react-dom', 'react-final-form'], factory) :
  (global = global || self, factory(global['react-final-form-html5-validation'] = {}, global.React, global.ReactDOM, global.ReactFinalForm));
}(this, (function (exports, React, ReactDOM, reactFinalForm) { 'use strict';

  ReactDOM = ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, 'default') ? ReactDOM['default'] : ReactDOM;

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  //      
  var warning =  function (condition, message) {
    if (!condition) {
      console.error("Warning: " + message);
    }
  };

  var errorKeys = ['badInput', 'patternMismatch', 'rangeOverflow', 'rangeUnderflow', 'stepMismatch', 'tooLong', 'tooShort', 'typeMismatch', 'valueMissing'];

  var Html5ValidationField = /*#__PURE__*/function (_React$Component) {
    _inheritsLoose(Html5ValidationField, _React$Component);

    function Html5ValidationField() {
      var _this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

      _defineProperty(_assertThisInitialized(_this), "validate", function (value, allValues) {
        var _assertThisInitialize = _assertThisInitialized(_this),
            input = _assertThisInitialize.input,
            validate = _assertThisInitialize.props.validate;

        if (input) {
          var validity = input && input.validity;

          if (validate) {
            var error = validate(value, allValues);

            if (input.setCustomValidity && typeof error === 'string') {
              input.setCustomValidity(error);
            }

            if (error) {
              return error;
            }
          }

          input.setCustomValidity('');

          if (validity && !validity.valid) {
            if (validity.customError) {
              return validity.customError;
            }

            var errorKey = errorKeys.find(function (key) {
              return validity[key];
            });

            var _error = errorKey && _this.props[errorKey];

            if (typeof _error === 'function') {
              _error = _error(value, _this.props);
            }

            input.setCustomValidity(_error);
            return _error;
          }
        } else if (validate) {
          return validate(value, allValues);
        }
      });

      return _this;
    }

    var _proto = Html5ValidationField.prototype;

    _proto.componentDidMount = function componentDidMount() {
      var root = ReactDOM.findDOMNode(this);

      if (root) {
        var input;

        if (/input|textarea|select/.test(root.nodeName.toLowerCase())) {
          input = root;
        } else if (root.querySelector) {
          var name = this.props.name;
          input = root.querySelector("input[name=\"" + name + "\"],textarea[name=\"" + name + "\"],select[name=\"" + name + "\"]");
        }

        var foundInput = input && typeof input.setCustomValidity === 'function';

        if (foundInput) {
          this.input = input;
        }

        warning(foundInput, 'Could not find DOM input with HTML validity API');
      }
    };

    _proto.render = function render() {
      var _this$props = this.props,
          validate = _this$props.validate,
          badInput = _this$props.badInput,
          patternMismatch = _this$props.patternMismatch,
          rangeOverflow = _this$props.rangeOverflow,
          rangeUnderflow = _this$props.rangeUnderflow,
          stepMismatch = _this$props.stepMismatch,
          tooLong = _this$props.tooLong,
          tooShort = _this$props.tooShort,
          typeMismatch = _this$props.typeMismatch,
          valueMissing = _this$props.valueMissing,
          innerRef = _this$props.innerRef,
          rest = _objectWithoutPropertiesLoose(_this$props, ["validate", "badInput", "patternMismatch", "rangeOverflow", "rangeUnderflow", "stepMismatch", "tooLong", "tooShort", "typeMismatch", "valueMissing", "innerRef"]);

      return React.createElement(reactFinalForm.Field, _extends({
        validate: this.validate,
        ref: innerRef
      }, rest));
    };

    return Html5ValidationField;
  }(React.Component);

  _defineProperty(Html5ValidationField, "defaultProps", {
    badInput: 'Incorrect input',
    patternMismatch: 'Does not match expected pattern',
    rangeOverflow: 'Value too high',
    rangeUnderflow: 'Value too low',
    stepMismatch: 'Invalid step value',
    tooLong: 'Too long',
    tooShort: 'Too short',
    typeMismatch: 'Invalid value',
    valueMissing: 'Required'
  });

  var Html5ValidationField$1 = React.forwardRef(function (props, ref) {
    return React.createElement(Html5ValidationField, _extends({
      innerRef: ref
    }, props));
  });

  exports.Field = Html5ValidationField$1;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=react-final-form-html5-validation.umd.js.map
