{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\paykitaz\\\\paykitaz\\\\App.js\";\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Card } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport colors from \"./App/config/colors\";\nimport WelcomeScreen from \"./App/screens/welcomeScreen\";\nimport SliderScreen from \"./App/screens/SliderScreen\";\nimport LoginRegisterScreen from \"./App/screens/LoginRegisterScreen\";\nimport LoginScreen from \"./App/screens/LoginScreen\";\nimport Register1Screen from \"./App/screens/Register1Screen\";\nimport Register2Screen from \"./App/screens/Register2Screen\";\nimport RegisterVerifikasiScreen from \"./App/screens/RegisterVerifikasiScreen\";\nimport RegisterInputLoginDataScreen from \"./App/screens/RegisterInputLoginDataScreen\";\nimport ViewImageScreen from \"./App/screens/viewimage\";\nimport CardCom from \"./App/components/card\";\nimport ListingScreen from \"./App/screens/listingScreen\";\nimport MainScreen from \"./App/screens/MainScreen\";\nimport AccountScreen from \"./App/screens/AccountScreen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Cartbar from \"./App/components/cartbar\";\nimport { navigationRef } from \"./RootNavigation\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\n\nvar App = function App() {\n  var Stack = createStackNavigator();\n  return React.createElement(NavigationContainer, {\n    ref: navigationRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Slider\",\n    component: SliderScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"LoginRegister\",\n    component: LoginRegisterScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register1\",\n    component: Register1Screen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register2\",\n    component: Register2Screen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RegisterVerifikasi\",\n    component: RegisterVerifikasiScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RegisterInputLoginData\",\n    component: RegisterInputLoginDataScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Viewimage\",\n    component: ViewImageScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Account\",\n    component: AccountScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  big: {\n    fontSize: 48\n  }\n});\nvar Tab = createBottomTabNavigator();\nexport function Toolbar() {\n  var _this2 = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: MainScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Account\",\n    component: AccountScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })));\n}\n{}\n{}\n{}","map":{"version":3,"sources":["D:/Project/paykitaz/paykitaz/App.js"],"names":["React","Card","colors","WelcomeScreen","SliderScreen","LoginRegisterScreen","LoginScreen","Register1Screen","Register2Screen","RegisterVerifikasiScreen","RegisterInputLoginDataScreen","ViewImageScreen","CardCom","ListingScreen","MainScreen","AccountScreen","NavigationContainer","createStackNavigator","Cartbar","navigationRef","createBottomTabNavigator","Ionicons","App","Stack","headerShown","styles","StyleSheet","create","container","flex","backgroundColor","justifyContent","alignItems","big","fontSize","Tab","Toolbar","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["//import { StatusBar } from \"expo-status-bar\";\nimport * as React from 'react';\nimport {\n  StyleSheet,\n  Dimensions,\n  Text,\n  View,\n  SafeAreaView,\n  Card,\n  Image,\n  TouchableWithoutFeedback,\n  TouchableOpacity,\n  TouchableHighlight,\n  Button,\n  Alert,\n} from \"react-native\";\nimport colors from \"./App/config/colors\";\n/*\nimport {\n  useDimensions,\n  useDeviceOrientation,\n} from \"@react-native-community/hooks\";  use this to support orientations */\n\n\n\nimport WelcomeScreen from \"./App/screens/welcomeScreen\";\nimport SliderScreen from \"./App/screens/SliderScreen\";\nimport LoginRegisterScreen from \"./App/screens/LoginRegisterScreen\";\nimport LoginScreen from \"./App/screens/LoginScreen\";\nimport Register1Screen from \"./App/screens/Register1Screen\";\nimport Register2Screen from \"./App/screens/Register2Screen\";\nimport RegisterVerifikasiScreen from \"./App/screens/RegisterVerifikasiScreen\";\nimport RegisterInputLoginDataScreen from \"./App/screens/RegisterInputLoginDataScreen\";\nimport ViewImageScreen from \"./App/screens/viewimage\";\nimport CardCom from \"./App/components/card\";\nimport ListingScreen from \"./App/screens/listingScreen\";\nimport MainScreen from \"./App/screens/MainScreen\";\nimport AccountScreen from \"./App/screens/AccountScreen\";\n\n\n\n//use safearea to make sure it's not covered\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Cartbar from \"./App/components/cartbar\";\nimport { navigationRef } from './RootNavigation';\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\n\n\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\n\n\nconst App = () => {\n  const Stack = createStackNavigator();\n  //shake the phone for dev menu\n  /* const {\n    landscape,\n  } = useDeviceOrientation(); /* change with orientation  <Text style={{color: landscape ? 'green' : 'black',}}>Meme dictionary</Text> */\n  return (\n    <NavigationContainer ref={navigationRef}>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Slider\" component={SliderScreen}  options={{ headerShown: false }} />\n        <Stack.Screen name=\"LoginRegister\" component={LoginRegisterScreen}  options={{ headerShown: false }} />\n        <Stack.Screen name=\"Login\" component={LoginScreen}  options={{ headerShown: false }} />\n        <Stack.Screen name=\"Register1\" component={Register1Screen}  options={{ headerShown: false }} />\n        <Stack.Screen name=\"Register2\" component={Register2Screen}  options={{ headerShown: false }} />\n        <Stack.Screen name=\"RegisterVerifikasi\" component={RegisterVerifikasiScreen}  options={{ headerShown: false }} />\n        <Stack.Screen name=\"RegisterInputLoginData\" component={RegisterInputLoginDataScreen}  options={{ headerShown: false }} />\n        <Stack.Screen name=\"Viewimage\" component={ViewImageScreen}  options={{ headerShown: false }} />\n        <Stack.Screen name=\"Main\" component={MainScreen}  options={{ headerShown: false }} />\n        <Stack.Screen name=\"Account\" component={AccountScreen}  options={{ headerShown: false }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    justifyContent: \"center\",\n\talignItems:\"center\",\n  },\n  big: {\n    fontSize: 48,\n  },\n});\n\nconst Tab = createBottomTabNavigator();\n\nexport function Toolbar() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused\n                ? 'ios-information-circle'\n                : 'ios-information-circle-outline';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            }\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}\n      >\n        <Tab.Screen name=\"Home\" component={MainScreen} />\n        <Tab.Screen name=\"Account\" component={AccountScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\n//const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\n\n{\n  /*local image <Image styles={styles.image} source={require(\"./assets/download.png\")} />*/\n}\n{\n  /* alerts \n  <Button title=\"click meh\" onPress={() => Alert.alert('Do you', 'yes', [\n    {text: 'yes'},\n    {text: 'nah', onPress:HandlePress}\n  ])}  />*/\n}\n\n{\n  /* web inmages <Image\n  style={styles.image}\n  source={{\n    width: 200,\n    height: 300,\n    uri:\n      \"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fi0.kym-cdn.com%2Fphotos%2Fimages%2Foriginal%2F000%2F640%2F866%2Fe59.png&f=1&nofb=1\",\n  }}\n/>\n*/\n}\n"]},"metadata":{},"sourceType":"module"}