{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Project\\\\paykitaz\\\\paykitaz\\\\App\\\\screens\\\\MainScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Styles from \"./LoginStyles\";\nimport { Form } from 'react-final-form';\nimport { Field } from 'react-final-form-html5-validation';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AppButton from \"../components/appbutton\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport $ from 'jquery';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StackActions } from '@react-navigation/native';\nimport { useNavigation } from '@react-navigation/native';\nimport { NavigationActions } from 'react-navigation';\nimport Register2Screen from \"./Register2Screen\";\nimport * as RootNavigation from \"./../../RootNavigation.js\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport AccountScreen from \"./AccountScreen\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nvar MainScr = function (_React$Component) {\n  _inherits(MainScr, _React$Component);\n\n  var _super = _createSuper(MainScr);\n\n  function MainScr(props) {\n    var _this;\n\n    _classCallCheck(this, MainScr);\n\n    _this = _super.call(this, props);\n    console.log(_this.props);\n    console.log(props);\n    return _this;\n  }\n\n  _createClass(MainScr, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 4\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 4\n        }\n      }, \"Main\"));\n    }\n  }]);\n\n  return MainScr;\n}(React.Component);\n\nexport { MainScr as default };\nvar Tab = createMaterialBottomTabNavigator();\n\nfunction App2() {\n  var _this2 = this;\n\n  return React.createElement(NavigationContainer, {\n    independent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    initialRouteName: \"Feed\",\n    tabBarOptions: {\n      activeTintColor: '#42f44b'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"HomeStack\",\n    component: HomeStack,\n    options: {\n      tabBarLabel: 'Home',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          color: color,\n          size: size,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"SettingsStack\",\n    component: SettingsStack,\n    options: {\n      tabBarLabel: 'Settings',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"settings\",\n          color: color,\n          size: size,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport { App2 };","map":{"version":3,"sources":["D:/Project/paykitaz/paykitaz/App/screens/MainScreen.js"],"names":["React","render","Styles","Form","Field","AppButton","AsyncStorage","$","NavigationContainer","createStackNavigator","StackActions","useNavigation","NavigationActions","Register2Screen","RootNavigation","createMaterialBottomTabNavigator","AccountScreen","MaterialCommunityIcons","MainScr","props","console","log","Component","Tab","App2","activeTintColor","HomeStack","tabBarLabel","tabBarIcon","color","size","SettingsStack"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,MAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,mCAAtB;;;;;;AAQA,OAAOC,SAAP;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,OAAOC,eAAP;AACA,OAAO,KAAKC,cAAZ;AACA,SAASC,gCAAT,QAAiD,wCAAjD;AACA,OAAOC,aAAP;AACA,OACCC,sBADD;;IAIqBC,O;;;;;AAErB,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKF,KAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAHiB;AAIjB;;;;WACA,kBAAQ;AACP,aACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CADD;AAKA;;;;EAbmCnB,KAAK,CAACsB,S;;SAAtBJ,O;AAiBrB,IAAMK,GAAG,GAAGR,gCAAgC,EAA5C;;AAEA,SAASS,IAAT,GAAgB;AAAA;;AACd,SACE,oBAAC,mBAAD;AAAqB,IAAA,WAAW,EAAE,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,gBAAgB,EAAC,MADnB;AAEE,IAAA,aAAa,EAAE;AACbC,MAAAA,eAAe,EAAE;AADJ,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,GAAD,CAAK,MAAL;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,MADN;AAEPC,MAAAA,UAAU,EAAE;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,YAAUC,IAAV,QAAUA,IAAV;AAAA,eACV,oBAAC,sBAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAED,KAFT;AAGE,UAAA,IAAI,EAAEC,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA;AAFL,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAkBE,oBAAC,GAAD,CAAK,MAAL;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,SAAS,EAAEC,aAFb;AAGE,IAAA,OAAO,EAAE;AACPJ,MAAAA,WAAW,EAAE,UADN;AAEPC,MAAAA,UAAU,EAAE;AAAA,YAAGC,KAAH,SAAGA,KAAH;AAAA,YAAUC,IAAV,SAAUA,IAAV;AAAA,eACV,oBAAC,sBAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAED,KAFT;AAGE,UAAA,IAAI,EAAEC,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA;AAFL,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF,CADF;AAoCD;;AACD,SAAQN,IAAR","sourcesContent":["import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport Styles from './LoginStyles'\r\nimport { Form } from 'react-final-form'\r\nimport { Field } from 'react-final-form-html5-validation'\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ImageBackground,\r\n  Image,\r\n} from \"react-native\";\r\nimport AppButton from \"../components/appbutton\";\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport $ from 'jquery';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NavigationActions } from 'react-navigation';\r\n//const pushAction = StackActions.push('Register2', { user: 'Wojtek' });\r\nimport Register2Screen from './Register2Screen'\r\nimport * as RootNavigation from './../../RootNavigation.js';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport AccountScreen from './AccountScreen';\r\nimport\r\n MaterialCommunityIcons\r\nfrom 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nexport default class MainScr extends React.Component\r\n{\r\nconstructor(props){\r\n super(props);\r\n\tconsole.log(this.props);\r\n console.log(props);\r\n}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<View>\r\n\t\t\t<Text>Main</Text>\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nfunction App2() {\r\n  return (\r\n    <NavigationContainer independent={true}>\r\n      <Tab.Navigator\r\n        initialRouteName=\"Feed\"\r\n        tabBarOptions={{\r\n          activeTintColor: '#42f44b',\r\n        }}>\r\n        <Tab.Screen\r\n          name=\"HomeStack\"\r\n          component={HomeStack}\r\n          options={{\r\n            tabBarLabel: 'Home',\r\n            tabBarIcon: ({ color, size }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"home\"\r\n                color={color}\r\n                size={size}\r\n              />\r\n            ),\r\n          }}  />\r\n        <Tab.Screen\r\n          name=\"SettingsStack\"\r\n          component={SettingsStack}\r\n          options={{\r\n            tabBarLabel: 'Settings',\r\n            tabBarIcon: ({ color, size }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"settings\"\r\n                color={color}\r\n                size={size}\r\n              />\r\n            ),\r\n          }} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\nexport {App2};\r\n"]},"metadata":{},"sourceType":"module"}