{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Project\\\\paykitaz\\\\paykitaz\\\\App\\\\screens\\\\Register1Screen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ValidationComponent from 'react-native-form-validator';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nvar dimensions = Dimensions.get('window');\nvar imageHeight = dimensions.height;\nvar imageWidth = dimensions.width;\n\nvar FormTest = function (_ValidationComponent) {\n  _inherits(FormTest, _ValidationComponent);\n\n  var _super = _createSuper(FormTest);\n\n  function FormTest(props) {\n    var _this;\n\n    _classCallCheck(this, FormTest);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"My name\",\n      email: \"tibtib@gmail.com\",\n      number: \"56\",\n      date: \"2017-03-01\",\n      newPassword: \"\",\n      confirmPassword: \"\"\n    };\n    _this._onPressButton = _this._onPressButton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FormTest, [{\n    key: \"_onPressButton\",\n    value: function _onPressButton() {\n      this.validate({\n        name: {\n          minlength: 3,\n          maxlength: 7,\n          required: true\n        },\n        email: {\n          email: true\n        },\n        number: {\n          numbers: true\n        },\n        date: {\n          date: 'YYYY-MM-DD'\n        },\n        confirmPassword: {\n          equalPassword: this.state.newPassword\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 4\n        }\n      }, \"Nama Merchant\"), React.createElement(TextInput, {\n        ref: \"name\",\n        style: styles.inputarea,\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        value: this.state.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 3\n        }\n      }), React.createElement(TextInput, {\n        ref: \"email\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        ref: \"number\",\n        onChangeText: function onChangeText(number) {\n          return _this2.setState({\n            number: number\n          });\n        },\n        value: this.state.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        ref: \"date\",\n        onChangeText: function onChangeText(date) {\n          return _this2.setState({\n            date: date\n          });\n        },\n        value: this.state.date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }), this.isFieldInError('date') && this.getErrorsInField('date').map(function (errorMessage) {\n        return React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 93\n          }\n        }, errorMessage);\n      }), React.createElement(TextInput, {\n        ref: \"newPassword\",\n        onChangeText: function onChangeText(newPassword) {\n          return _this2.setState({\n            newPassword: newPassword\n          });\n        },\n        value: this.state.newPassword,\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        ref: \"confirmPassword\",\n        onChangeText: function onChangeText(confirmPassword) {\n          return _this2.setState({\n            confirmPassword: confirmPassword\n          });\n        },\n        value: this.state.confirmPassword,\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }), this.isFieldInError('confirmPassword') && this.getErrorsInField('confirmPassword').map(function (errorMessage) {\n        return React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 115\n          }\n        }, errorMessage);\n      }), React.createElement(TouchableHighlight, {\n        onPress: this._onPressButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"Submit\")), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, this.getErrorMessages()));\n    }\n  }]);\n\n  return FormTest;\n}(ValidationComponent);\n\nexport { FormTest as default };\nvar styles = StyleSheet.create({\n  inputarea: {\n    width: imageWidth,\n    height: imageHeight,\n    fontSize: 14\n  }\n});","map":{"version":3,"sources":["D:/Project/paykitaz/paykitaz/App/screens/Register1Screen.js"],"names":["React","Component","ValidationComponent","Icon","dimensions","Dimensions","get","imageHeight","height","imageWidth","width","FormTest","props","state","name","email","number","date","newPassword","confirmPassword","_onPressButton","bind","validate","minlength","maxlength","required","numbers","equalPassword","styles","inputarea","setState","isFieldInError","getErrorsInField","map","errorMessage","getErrorMessages","StyleSheet","create","fontSize"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport React, {Component}  from 'react';\r\nimport {View, Text, TextInput, TouchableHighlight} from 'react-native';\r\nimport ValidationComponent from 'react-native-form-validator';\r\nimport {Dimensions} from 'react-native';\r\nimport {Image, StyleSheet} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\nconst dimensions = Dimensions.get('window');\r\nconst imageHeight = dimensions.height ;\r\nconst imageWidth = dimensions.width;\r\n\r\n\r\nexport default class FormTest extends ValidationComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {name : \"My name\", email: \"tibtib@gmail.com\", number:\"56\", date: \"2017-03-01\", newPassword : \"\", confirmPassword : \"\"};\r\nthis._onPressButton = this._onPressButton.bind(this);\r\n  }\r\n\r\n  _onPressButton() {\r\n    // Call ValidationComponent validate method\r\n    this.validate({\r\n      name: {minlength:3, maxlength:7, required: true},\r\n      email: {email: true},\r\n      number: {numbers: true},\r\n      date: {date: 'YYYY-MM-DD'},\r\n\t  confirmPassword : {equalPassword : this.state.newPassword}\r\n\t  });\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <View>\r\n\t\t\t<Text>\r\n            Nama Merchant\r\n          </Text>\r\n  <TextInput ref=\"name\" style={styles.inputarea} onChangeText={(name) => this.setState({name})} value={this.state.name} />\r\n          <TextInput ref=\"email\" onChangeText={(email) => this.setState({email})} value={this.state.email} />\r\n          <TextInput ref=\"number\" onChangeText={(number) => this.setState({number})} value={this.state.number} />\r\n          <TextInput ref=\"date\" onChangeText={(date) => this.setState({date})} value={this.state.date} />\r\n          {this.isFieldInError('date') && this.getErrorsInField('date').map(errorMessage => <Text>{errorMessage}</Text>) }\r\n\r\n          <TextInput ref=\"newPassword\" onChangeText={(newPassword) => this.setState({newPassword})} value={this.state.newPassword}  secureTextEntry={true}/>\r\n          <TextInput ref=\"confirmPassword\" onChangeText={(confirmPassword) => this.setState({confirmPassword})} value={this.state.confirmPassword} secureTextEntry={true} />\r\n          {this.isFieldInError('confirmPassword') && this.getErrorsInField('confirmPassword').map(errorMessage => <Text>{errorMessage}</Text>) }\r\n\r\n          <TouchableHighlight onPress={this._onPressButton}>\r\n            <Text>Submit</Text>\r\n          </TouchableHighlight>\r\n\r\n          <Text>\r\n            {this.getErrorMessages()}\r\n          </Text>\r\n        </View>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  inputarea: {\r\n    width: imageWidth,\r\n\theight: imageHeight,\r\n\tfontSize:14\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}